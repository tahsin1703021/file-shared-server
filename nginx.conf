http {
    lua_shared_dict ip_request_limit 10m;

    limit_req_zone $binary_remote_addr zone=req_limit:10m rate=5r/s;  # Global 5 requests per second

    server {
        listen 80;

        location /api/ {
            # Apply global rate limit (5 requests per second per IP)
            limit_req zone=req_limit burst=10 nodelay;

            set $ip_key "rate_limit:$remote_addr";  # Redis key for tracking IP requests

            # Lua block to check and update Redis for daily limit
            access_by_lua_block {
                local redis = require "resty.redis"
                local red = redis:new()

                red:set_timeout(1000)  -- Set Redis timeout
                local ok, err = red:connect("redis", 6379)  -- Connect to Redis

                if not ok then
                    ngx.say("failed to connect to Redis: ", err)
                    return ngx.exit(500)
                end

                -- Get current request count for the IP
                local current_requests, err = red:get(ngx.var.ip_key)
                if current_requests == ngx.null then
                    current_requests = 0
                end

                -- Daily request limit (e.g., 5 requests per day)
                local daily_limit = 5
                if tonumber(current_requests) >= daily_limit then
                    ngx.status = ngx.HTTP_TOO_MANY_REQUESTS
                    ngx.say("Daily request limit exceeded")
                    return ngx.exit(ngx.HTTP_TOO_MANY_REQUESTS)
                end

                -- Increment request count for this IP
                local _, err = red:incr(ngx.var.ip_key)
                if err then
                    ngx.say("failed to increment request count: ", err)
                    return ngx.exit(500)
                end

                -- Set expiration of the Redis key (1 day)
                red:expire(ngx.var.ip_key, 86400)
            }

            rewrite ^/api(/.*)$ $1 break;

            # Proxy request to the Node.js backend
            proxy_pass http://file-shared-server:3000;
            
        }
    }
}
