events {
    worker_connections 1024;  # Set a reasonable limit on connections per worker
}

http {
    # lua_shared_dict ip_request_limit 10m;
    # limit_req_zone $binary_remote_addr zone=req_limit:10m rate=5r/s;

    error_log /var/log/nginx/error.log debug;  # You can use 'info' or 'warn' for less verbosity
    access_log /var/log/nginx/access.log;
    
    server {
        listen 80;

        location /api/ {

            proxy_pass http://file-shared-server:3000/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

            # limit_req zone=req_limit burst=10 nodelay;

            # set $ip_key "rate_limit:$remote_addr";

            # access_by_lua_block {
            #     local redis = require "resty.redis"
            #     local red = redis:new()

            #     red:set_timeout(1000)
            #     local ok, err = red:connect("redis", 6379)

            #     if not ok then
            #         ngx.say("failed to connect to Redis: ", err)
            #         return ngx.exit(500)
            #     end

            #     local current_requests, err = red:get(ngx.var.ip_key)
            #     if current_requests == ngx.null then
            #         current_requests = 0
            #     end

            #     local daily_limit = 5
            #     if tonumber(current_requests) >= daily_limit then
            #         ngx.status = ngx.HTTP_TOO_MANY_REQUESTS
            #         ngx.say("Daily request limit exceeded")
            #         return ngx.exit(ngx.HTTP_TOO_MANY_REQUESTS)
            #     end

            #     local _, err = red:incr(ngx.var.ip_key)
            #     if err then
            #         ngx.say("failed to increment request count: ", err)
            #         return ngx.exit(500)
            #     end

            #     red:expire(ngx.var.ip_key, 86400)
            # }

            # proxy_pass http://file-shared-server:3000;
            # proxy_set_header Host $host;
            # proxy_set_header X-Real-IP $remote_addr;
            # proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        }

        # location / {
        #     root /usr/local/openresty/nginx/html;
        #     index index.html index.htm;
        # }
    }
}
